[versions]
androidPlugin = "8.10.1"
converterGson = "2.9.0"
kotlin = "2.0.21"
compose = "1.5.10"
composeBom = "2025.06.00"
lifecycleCore = "1.15.0"
lifecycleRuntime = "2.8.7"
composeActivity = "1.10.0"
junit = "4.13.2"
androidJunit = "1.2.1"
espresso = "3.6.1"
dagger = "2.55"
coroutines = "1.8.0"
okhttp = "4.12.0"

retrofit = "2.11.0"
serializationJson = "1.6.0"
serializationConverter = "1.0.0"
annotationJvm = "1.9.1"

# Database
room = "2.6.1"
workManager = "2.9.0"
startup = "1.1.1"
datastore = "1.0.0"
securityCrypto = "1.1.0-alpha06"
lottie = "6.0.0"
haptics = "1.0.0"


[libraries]
# Compose
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version = "2.8.6" }

# Lifecycle
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
lifecycle-core = { group = "androidx.core", name = "core-ktx", version.ref = "lifecycleCore" }
lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntime" }
compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "composeActivity" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
android-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidJunit" }
espresso = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
compose-junit = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

# DI
dagger = { group = "com.google.dagger", name = "dagger", version.ref = "dagger" }
dagger-compiler = { group = "com.google.dagger", name = "dagger-compiler", version.ref = "dagger" }

# Coroutines
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }

# Retrofit
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "serializationJson" }
serialization-converter = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "serializationConverter" }
annotation-jvm = { group = "androidx.annotation", name = "annotation-jvm", version.ref = "annotationJvm" }

# Room Database
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

# WorkManager
work-manager = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workManager" }

# Startup
startup-runtime = { group = "androidx.startup", name = "startup-runtime", version.ref = "startup" }

# DataStore
datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }

# Security & Encryption
security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "securityCrypto" }

# Lottie Animation
lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottie" }


[plugins]
android-application = { id = "com.android.application", version.ref = "androidPlugin" }
android-library = { id = "com.android.library", version.ref = "androidPlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
compose-compiler = {id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin"}